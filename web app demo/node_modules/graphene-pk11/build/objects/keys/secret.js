"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var key_1 = require("./key");
var SecretKey = (function (_super) {
    tslib_1.__extends(SecretKey, _super);
    function SecretKey() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(SecretKey.prototype, "sensitive", {
        get: function () {
            return this.get("sensitive");
        },
        set: function (v) {
            this.set("sensitive", v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecretKey.prototype, "encrypt", {
        get: function () {
            try {
                return this.get("encrypt");
            }
            catch (err) {
                return false;
            }
        },
        set: function (v) {
            this.set("encrypt", v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecretKey.prototype, "decrypt", {
        get: function () {
            try {
                return this.get("decrypt");
            }
            catch (err) {
                return false;
            }
        },
        set: function (v) {
            this.set("decrypt", v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecretKey.prototype, "verify", {
        get: function () {
            try {
                return this.get("verify");
            }
            catch (err) {
                return false;
            }
        },
        set: function (v) {
            this.set("verify", v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecretKey.prototype, "sign", {
        get: function () {
            try {
                return this.get("sign");
            }
            catch (err) {
                return false;
            }
        },
        set: function (v) {
            this.set("sign", v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecretKey.prototype, "wrap", {
        get: function () {
            try {
                return this.get("wrap");
            }
            catch (err) {
                return false;
            }
        },
        set: function (v) {
            this.set("wrap", v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecretKey.prototype, "unwrap", {
        get: function () {
            try {
                return this.get("unwrap");
            }
            catch (err) {
                return false;
            }
        },
        set: function (v) {
            this.set("unwrap", v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecretKey.prototype, "extractable", {
        get: function () {
            return this.get("extractable");
        },
        set: function (v) {
            this.set("extractable", v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecretKey.prototype, "alwaysSensitive", {
        get: function () {
            return this.get("alwaysSensitive   ");
        },
        set: function (v) {
            this.set("alwaysSensitive", v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecretKey.prototype, "neverExtractable", {
        get: function () {
            return this.get("neverExtractable");
        },
        set: function (v) {
            this.set("neverExtractable", v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecretKey.prototype, "checkValue", {
        get: function () {
            return this.get("checkValue");
        },
        set: function (v) {
            this.set("checkValue", v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecretKey.prototype, "wrapTrusted", {
        get: function () {
            return this.get("wrapWithTrusted");
        },
        set: function (v) {
            this.set("wrapWithTrusted", v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecretKey.prototype, "trusted", {
        get: function () {
            return this.get("trusted");
        },
        set: function (v) {
            this.set("trusted", v);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecretKey.prototype, "wrapTemplate", {
        get: function () {
            throw new Error("Not implemented");
        },
        set: function (v) {
            throw new Error("Not implemented");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SecretKey.prototype, "unwrapTemplate", {
        get: function () {
            throw new Error("Not implemented");
        },
        set: function (v) {
            throw new Error("Not implemented");
        },
        enumerable: true,
        configurable: true
    });
    return SecretKey;
}(key_1.Key));
exports.SecretKey = SecretKey;
